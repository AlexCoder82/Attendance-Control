// <auto-generated />
using System;
using AttendanceControl.API.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AttendanceControl.API.DataAccess.Migrations
{
    [DbContext(typeof(AttendanceControlDBContext))]
    partial class AttendanceControlDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.AbsenceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnName("scheduleId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnName("studentId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnName("type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("StudentId");

                    b.ToTable("absence");
                });

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.AdminEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasColumnName("admin_name")
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("admin_name")
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.ToTable("administrator");
                });

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.CycleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Year")
                        .HasColumnName("year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("cycle");
                });

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.CycleSubjectEntity", b =>
                {
                    b.Property<int>("CycleId")
                        .HasColumnName("cycleId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnName("subjectId")
                        .HasColumnType("int");

                    b.HasKey("CycleId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("cycle_has_subjects");
                });

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.PersonDataEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnName("dni")
                        .HasColumnType("varchar(9)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("firstname")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName1")
                        .IsRequired()
                        .HasColumnName("lastname1")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName2")
                        .HasColumnName("lastname2")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("person_data");
                });

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.ScheduleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("Day")
                        .HasColumnName("day")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnName("end")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("Start")
                        .HasColumnName("start")
                        .HasColumnType("timestamp");

                    b.Property<int>("SubjectId")
                        .HasColumnName("subjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("schedule");
                });

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.StudentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("PersonDataId")
                        .HasColumnName("person_data_id")
                        .HasColumnType("int");

                    b.Property<int>("TotalAbsences")
                        .HasColumnName("total_absences")
                        .HasColumnType("int");

                    b.Property<int>("TotalDelays")
                        .HasColumnName("total_delays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonDataId")
                        .IsUnique();

                    b.ToTable("student");
                });

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.StudentSubjectEntity", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnName("studentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnName("subjectId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("student_has_subjects");
                });

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.SubjectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TeacherId")
                        .HasColumnName("teacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("subject");
                });

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.TeacherEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(32)");

                    b.Property<int>("PersonDataId")
                        .HasColumnName("person_data_id")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("PersonDataId")
                        .IsUnique();

                    b.ToTable("teacher");
                });

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.AbsenceEntity", b =>
                {
                    b.HasOne("AttendanceControl.API.DataAccess.Contracts.Entities.ScheduleEntity", "ScheduleEntity")
                        .WithMany("AbsenceEntities")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceControl.API.DataAccess.Contracts.Entities.StudentEntity", "StudentEntity")
                        .WithMany("AbsenceEntities")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.CycleSubjectEntity", b =>
                {
                    b.HasOne("AttendanceControl.API.DataAccess.Contracts.Entities.CycleEntity", "CycleEntity")
                        .WithMany("CycleSubjectEntities")
                        .HasForeignKey("CycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceControl.API.DataAccess.Contracts.Entities.SubjectEntity", "SubjectEntity")
                        .WithMany("CycleSubjectEntities")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.ScheduleEntity", b =>
                {
                    b.HasOne("AttendanceControl.API.DataAccess.Contracts.Entities.SubjectEntity", "SubjectEntity")
                        .WithMany("ScheduleEntities")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.StudentEntity", b =>
                {
                    b.HasOne("AttendanceControl.API.DataAccess.Contracts.Entities.PersonDataEntity", "PersonDataEntity")
                        .WithOne("StudentEntity")
                        .HasForeignKey("AttendanceControl.API.DataAccess.Contracts.Entities.StudentEntity", "PersonDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.StudentSubjectEntity", b =>
                {
                    b.HasOne("AttendanceControl.API.DataAccess.Contracts.Entities.StudentEntity", "StudentEntity")
                        .WithMany("StudentSubjectEntities")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceControl.API.DataAccess.Contracts.Entities.SubjectEntity", "SubjectEntity")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.SubjectEntity", b =>
                {
                    b.HasOne("AttendanceControl.API.DataAccess.Contracts.Entities.TeacherEntity", "TeacherEntity")
                        .WithMany("SubjectEntities")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AttendanceControl.API.DataAccess.Contracts.Entities.TeacherEntity", b =>
                {
                    b.HasOne("AttendanceControl.API.DataAccess.Contracts.Entities.PersonDataEntity", "PersonDataEntity")
                        .WithOne("TeacherEntity")
                        .HasForeignKey("AttendanceControl.API.DataAccess.Contracts.Entities.TeacherEntity", "PersonDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
